@using System.Threading.Tasks;
@using LT.DigitalOffice.GUI.Services.Interfaces;
@using LT.DigitalOffice.GUI.Services.ApiClients.CompanyService;
@using LT.DigitalOffice.GUI.Properties;

@inject ICompanyService companyService

<EditForm Model="@_departmentInfo" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="create-department_container">
        <div class="item-groop">
            <label for="create-department_name">@Resources.DepartmentName<font color="red">*</font></label>
            <input @bind-value="_departmentInfo.Name"
                   type="text"
                   id="create-department_name"
                   class="form-control"
                   @onkeyup="@((k) => {
                               if (k.Code == "Enter" || k.Code == "ArrowDown")
                                   _descriptionInput.FocusAsync();})" />
            <ValidationMessage style="font-size: 0.7em;" For="() => _departmentInfo.Name" />
        </div>
        <div class="item-groop_textarea">
            <label for="create-department_description">@Resources.DepartmentDescription<font color="red">*</font></label>
            <textarea @bind="_departmentInfo.Description"
                      @ref="_descriptionInput"
                      type="text"
                      id="create-department_description"
                      class="form-control"
                      @onkeyup="@((k) => {
                                  if (k.Code == "Enter" || k.Code == "ArrowDown")
                                      _directorSelect.FocusAsync();})" />
            <ValidationMessage style="font-size: 0.7em;" For="() => _departmentInfo.Description" />
        </div>
        <div class="item-groop">
            <label for="create-department_director">@Resources.DepartmentDirector</label>
            <select @bind="_departmentInfo.DirectorUserId"
                    @ref="_directorSelect"
                    id="create-department_director"
                    class="form-select">
                <option value=null selected>@Resources.NotSelected...</option>
                <option>to do</option>
            </select>
        </div>
        <div class="create-department_actions-container">
            <p class="info_container">@_message</p>
            <button class="btn btn-primary" type="submit">@Resources.CreateDepartment</button>
        </div>
    </div>
</EditForm>

    @code {
        private NewDepartmentRequest _departmentData = new();
        private BaseDepartmentInfo _departmentInfo = new();
        private string _message;
        private ElementReference _descriptionInput;
        private ElementReference _directorSelect;

        private async Task HandleValidSubmit()
        {
            _departmentData.Info = _departmentInfo;

            _message = await companyService.CreateDepartment(_departmentData);
        }
    }
