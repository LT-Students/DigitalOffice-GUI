<p>Adding employees</p>

<input type="text" class="form-control" placeholder="Search employee by keywords"
            aria-label="Username" aria-describedby="basic-addon1">

<div style="display: flow-root">
    <div class="found-employes-content">
        <p>Found employees</p>
        <div class="overflow-auto">
            @foreach (var user in @_foundEmployees)
            {
                <div class=@( statesFoundEmployeesSelected[user.Index] ? "employee-content select-employee-content" : "employee-content") @onclick="() => {statesFoundEmployeesSelected[user.Index] = !statesFoundEmployeesSelected[user.Index]; _indexSelectEmployee = user.Index;}"> 
                    <p><img src=""/> @user.UserName <font style="margin-left: 18%;"> @user.Position </font> </p> 
                </div>
            }
        </div>
    </div>
    <div class="managed-employes">
        <button type="button"  class="btn btn-primary" data-toggle="modal" @onclick="AddFoundEmployees">Add</button>
        <button type="button"  class="btn btn-primary" data-toggle="modal">Remove</button>
    </div>
    <div class="selected-employes-content">
        <p>Selected employees</p>
        <div class="overflow-auto">
            @foreach (var user in @_selectedEmployees)
            {
                <div class=@( statesSelectedEmployees[user.Index] ? "employee-content select-employee-content" : "employee-content") @onclick="() => statesSelectedEmployees[user.Index] = !statesSelectedEmployees[user.Index]"> 
                    <p><img src=""/> @user.UserName <font style="margin-left: 18%;"> @user.Position </font> </p> 
                </div>
            }
        </div>
    </div>
</div>

@code {

    class User
    {
        public string UserName { get; init; }
        public string Position { get; init; }
        public int Index { get; set; }
    }

    private int _indexSelectEmployee;
    private int _countEmployees = 1;

    private List<User> _foundEmployees;
    private List<User> _selectedEmployees;

    private Dictionary<int, bool> statesFoundEmployeesSelected;
    private Dictionary<int, bool> statesSelectedEmployees;
    
    protected override void OnInitialized()
    {
        _foundEmployees = new();
        _selectedEmployees = new();

        _foundEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 0
        });
        _foundEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 1
        });
        _foundEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 2
        });
        _foundEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 3
        });
        _foundEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 4
        });
        _foundEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 5
        });

        _selectedEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 0
        });
        _selectedEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 1
        });
        _selectedEmployees.Add(new User{
            UserName = "Ivan Ivanov",
            Position = "Backend",
            Index = 2
        });
       
        statesFoundEmployeesSelected = new();
        statesSelectedEmployees = new();

        for (int i = 0; i < 8; i++)
        {
            statesFoundEmployeesSelected.Add(i, false);
            statesSelectedEmployees.Add(i, false);
        }
    }

    private void AddFoundEmployees()
    {
        var user = _foundEmployees[_indexSelectEmployee];

        statesFoundEmployeesSelected[user.Index - 1] = false;
        
        _foundEmployees.Remove(_foundEmployees[_indexSelectEmployee]);
        user.Index = _selectedEmployees.Last().Index++;

        _selectedEmployees.Add(user);
    }
}

